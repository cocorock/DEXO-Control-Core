States of the exoskeleton:
	Init
	Calibration_process
	Ready
	Walking
	Stoping
	E_stop
	Shutdown

Crtuches commands
	1.st_Calibration_trig
	2.st_walking_trig
	3.stop_trig
	4.shutdown
	5.disable_motors, temporary disabled
	6.break_motors, temporary disabled

The cruthches commands are currently implemented by the dummy_crutches_node a it receives the commands through the CLI.

State machine valid transitions:

a. Init -> Calibration_process:	1.st_Calibration_trig
b. Calibration_process -> Init:	Failed_Calibration
c. Calibration_process -> Ready:	Calibration_complete
d. Calibration_process -> E_stop:	4.shutdown, E_stop (motor_control_node)
e. Ready -> Walking:				2.st_walking_trig
f. Ready -> E_stop: 				4.shutdown, E_stop (E_strop triggered by any node)
g. Walking -> Stoping:				3.stop_trig
j. Walking -> E_stop:				4.shutdown, E_stop (E_strop triggered by any node)
k. Stoping -> Ready:				cycle_finished? (E_strop triggered by trajectory node)
h. Stoping -> E_stop:				4.shutdown, E_stop (E_strop triggered by any node)
i. E_stop ->Shutdown:				always

*each lines defines each of transitions of the FSM. The event in charge of triggering of the transition is described after the ':' with the node responsible or where the event occurs is inside parethesis.
The E_stop state is accesable via 4.shutdown or E_stop event in any node.

1. stop_trigger and manual_calibration_trigger need to be replace for one new topic using a new message that hold command sent from the d@ummy_crutches_node

2. The @dummy_crutches_node runs in a separately terminal thats why it is not defined in the launch file

3. I need a tropic with the message of type Trigger, to send the flag thet the cycle has finished, to the emergency_stop_node. 
